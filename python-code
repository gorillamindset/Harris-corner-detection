import cv2

cap = cv2.VideoCapture(r"/home/gorilla/Mtech/Thesis work/my project/data set problem 3/data_proj3/video/Damage1.mp4")//taking the video input.
cap.set(3, 640)
cap.set(4, 480)

def harriscorner(img):
    pass

count = 0
roi = None

while True:
    success, img = cap.read()
    if not success:
        break

    imgray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    if count == 0:
        # Select ROI in the first frame
        roi = cv2.selectROI("Select ROI", imgray, fromCenter=False, showCrosshair=True)
        cv2.destroyAllWindows()

    # Extract the region of interest (ROI) from the frame
    x, y, w, h = roi
    roi_cropped = imgray[y:y + h, x:x + w]

    # Apply the Harris Corner Detector on the ROI
    corners = cv2.cornerHarris(roi_cropped, 2, 3, 0.05)
    corners = cv2.dilate(corners, None, iterations=2)

    # Threshold for an optimal value, it may vary depending on the image.
    threshold_value = 0.01 * corners.max()

    # Mark the corners on the original image using a red color
    image_with_corners = img.copy()
    image_with_corners[y:y + h, x:x + w][corners > threshold_value] = [0, 0, 255]

    # Display the result
    cv2.imshow("Corners", image_with_corners)

    count += 1
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video capture and close the windows
cap.release()
cv2.destroyAllWindows()
